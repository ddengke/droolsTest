package com.credan.posNegative

import java.util.regex.Matcher;  
import java.util.regex.Pattern; 
import com.sample.EarlyFraudInputMessage;
import com.sample.RuleManager;

rule "PN_G_HRSMS"
// 短信中包含高危信息
lock-on-active true
	when
		$model : EarlyFraudInputMessage(checkID(id))
		$rule : RuleManager()
		eval($rule.readRuleInfo("PN_G_HRSMS",1) >= 0)
   	then
   		$rule.readRuleInfo(drools.getRule().getName(),1);
   		$rule.addRuleTotalScore($rule.getRuleScore());
   		$rule.recordRules(drools.getRule().getName(),$rule.getRuleScore(), $rule.getRuleDesc());
end

function boolean startCheck(String reg,String string)  
 {  
     boolean tem=false;  
       
     Pattern pattern = Pattern.compile(reg);  
     Matcher matcher=pattern.matcher(string);  
       
     tem=matcher.matches();  
     System.out.println("当前比对关键字是: "+reg+", "+string+"\r\n");
     System.out.println("当前比对结果是: "+tem+"\r\n");
     return tem;  
 }
 
function boolean checkID(String id)  
 {  
	boolean matchStr = false;
	id = id.trim();
	String reg = "^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$|^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$";
	matchStr = startCheck(reg,id);
	return matchStr;
 }